<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>twopointers on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/twopointers/</link>
    <description>Recent content in twopointers on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2020 14:05:24 -0400</lastBuildDate>
    
	<atom:link href="https://foxisawesome.github.io/tags/twopointers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>80 Remove Dup From Sorted Array II</title>
      <link>https://foxisawesome.github.io/posts/80-remove-dup-from-sorted-array-ii/</link>
      <pubDate>Fri, 04 Sep 2020 14:05:24 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/80-remove-dup-from-sorted-array-ii/</guid>
      <description>LC 80 Remove Dup From Sorted Array II   Given a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length.
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
Given nums = [0,0,1,1,1,1,2,3,3], output [0,0,1,1,2,3,3]  Solution 2020-09-04 Notes:
 Same thing as LC 26.  class Solution: def removeDuplicates(self, nums: List[int]) -&amp;gt; int: if not nums: return 0 count = dict() count[nums[0]] = 1 slow, fast = 0, 1 while fast &amp;lt; len(nums): count[nums[fast]] = count.</description>
    </item>
    
    <item>
      <title>26 Remove Dup From Sorted Array</title>
      <link>https://foxisawesome.github.io/posts/26-remove-dup-from-sorted-array/</link>
      <pubDate>Fri, 04 Sep 2020 13:45:50 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/26-remove-dup-from-sorted-array/</guid>
      <description>LC 26 Remove Dup From Sorted Array   Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
Given nums = [0,0,1,1,1,2,2,3,3,4], Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.</description>
    </item>
    
  </channel>
</rss>