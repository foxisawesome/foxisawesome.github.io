<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode BST on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/leetcode-bst/</link>
    <description>Recent content in leetcode BST on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Aug 2020 20:59:36 -0400</lastBuildDate>
    
	<atom:link href="https://foxisawesome.github.io/tags/leetcode-bst/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>530 Min Abs Dif BST</title>
      <link>https://foxisawesome.github.io/posts/530-min-abs-dif-bst/</link>
      <pubDate>Sun, 30 Aug 2020 20:59:36 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/530-min-abs-dif-bst/</guid>
      <description>LC 530
Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.
 Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.
Example:
Input: 1 \ 3 / 2 Output: 1 Explanation: The minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).  8/30/2020 Note:</description>
    </item>
    
    <item>
      <title>98 Valid BST</title>
      <link>https://foxisawesome.github.io/posts/98-valid-bst/</link>
      <pubDate>Sun, 30 Aug 2020 20:59:02 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/98-valid-bst/</guid>
      <description>LC 98
Given a binary tree, determine if it is a valid binary search tree (BST).
Assume a BST is defined as follows:
 The left subtree of a node contains only nodes with keys less than the node&amp;rsquo;s key. The right subtree of a node contains only nodes with keys greater than the node&amp;rsquo;s key. Both the left and right subtrees must also be binary search trees.  Example 1:</description>
    </item>
    
    <item>
      <title>701 Insert Into BST</title>
      <link>https://foxisawesome.github.io/posts/701-insert-into-bst/</link>
      <pubDate>Sun, 30 Aug 2020 20:58:29 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/701-insert-into-bst/</guid>
      <description>LC 701
 Given the root node of a binary search tree (BST) and a value to be inserted into the tree, insert the value into the BST. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.
Note that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion.</description>
    </item>
    
  </channel>
</rss>