<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matrix on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/matrix/</link>
    <description>Recent content in matrix on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 04 Nov 2020 13:35:18 -0500</lastBuildDate>
    
        <atom:link href="https://foxisawesome.github.io/tags/matrix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>78 Subsets</title>
      <link>https://foxisawesome.github.io/posts/78-subsets/</link>
      <pubDate>Mon, 21 Sep 2020 14:49:34 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/78-subsets/</guid>
      <description>LC 78 Subsets Given a set of distinct integers, nums, return all possible subsets (the power set). Input: nums = [1,2,3] Output:[[],[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]] Solution 2020-09-21 Notes: 简单的dfs题，有个新奇的点就是在dfs外面有个控制length的loop。刚开始我以为要</description>
    </item>
    
    <item>
      <title>77 Combinations</title>
      <link>https://foxisawesome.github.io/posts/77-combinations/</link>
      <pubDate>Mon, 21 Sep 2020 14:31:35 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/77-combinations/</guid>
      <description>LC 77 Combinations Given two integers n and k, return all possible combinations of k numbers out of 1 &amp;hellip; n. Solution 2020-09-21 Notes: Dfs 模版搞一下。没啥特别的。 class Solution: def combine(self, n: int, k: int) -&amp;gt; List[List[int]]: out = [] nums = [i for i in range(1,n+1)] self.dfs(n,k,nums,[],out) return out def dfs(self, n, k, nums, path, out): if len(path)==k: out.append(path[:])</description>
    </item>
    
    <item>
      <title>40 Combination Sum Ii</title>
      <link>https://foxisawesome.github.io/posts/40-combination-sum-ii/</link>
      <pubDate>Mon, 21 Sep 2020 14:17:59 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/40-combination-sum-ii/</guid>
      <description>LC 40 Combination Sum Ii Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target. Each number in candidates may only be used once in the combination. Input: candidates = [10,1,2,7,6,1,5], target = 8, A solution set is:[[1, 7], [1, 2, 5], [2, 6],[1, 1, 6]] Solution 2020-09-21 Notes: 这题与39题</description>
    </item>
    
    <item>
      <title>39 Combination Sum</title>
      <link>https://foxisawesome.github.io/posts/39-combination-sum/</link>
      <pubDate>Mon, 21 Sep 2020 14:11:52 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/39-combination-sum/</guid>
      <description>LC 39 Combination Sum Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target. Input: candidates = [2,3,6,7], target = 7, A solution set is: [[7],[2,2,3]] Solution 2020-09-21 Notes: 简单的DFS题，注意：path要是list(),</description>
    </item>
    
    <item>
      <title>17 Letter Combinations of a Phone Number</title>
      <link>https://foxisawesome.github.io/posts/17-letter-combinations-of-a-phone-number/</link>
      <pubDate>Mon, 21 Sep 2020 14:04:33 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/17-letter-combinations-of-a-phone-number/</guid>
      <description>LC 17 Letter Combinations of a Phone Number Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Solution 2020-09-21 Notes: 很简单的一道backtracking题套模版就可以了。为了避免dups，每次传入r</description>
    </item>
    
    <item>
      <title>921 Minimum Add to Make Parentheses Valid</title>
      <link>https://foxisawesome.github.io/posts/921-minimum-add-to-make-parentheses-valid/</link>
      <pubDate>Sun, 20 Sep 2020 21:05:02 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/921-minimum-add-to-make-parentheses-valid/</guid>
      <description>LC 921 Minimum Add to Make Parentheses Valid Given a string S of &#39;(&#39; and &#39;)&#39; parentheses, we add the minimum number of parentheses ( &#39;(&#39; or &#39;)&#39;, and in any positions ) so that the resulting parentheses string is valid. Solution 2020-09-20 Notes: 一遍就过的题没啥好说的。 class Solution: def minAddToMakeValid(self, S: str) -&amp;gt; int: if not S: return 0 stack</description>
    </item>
    
    <item>
      <title>22 Generate Parentheses</title>
      <link>https://foxisawesome.github.io/posts/22-generate-parentheses/</link>
      <pubDate>Sun, 20 Sep 2020 20:28:52 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/22-generate-parentheses/</guid>
      <description>LC 22 Generate Parentheses Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses. For example, given n = 3, a solution set is: [ &amp;quot;((()))&amp;quot;, &amp;quot;(()())&amp;quot;, &amp;quot;(())()&amp;quot;, &amp;quot;()(())&amp;quot;, &amp;quot;()()()&amp;quot; ] Solution 2020-09-20 Notes: 可以直接套用backtracking的模版，主要是l&amp;lt;n</description>
    </item>
    
    <item>
      <title>618 Students Report by Geography</title>
      <link>https://foxisawesome.github.io/posts/618-students-report-by-geography/</link>
      <pubDate>Sun, 20 Sep 2020 19:00:41 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/618-students-report-by-geography/</guid>
      <description>LC 618 Students Report by Geography input | name | continent | |--------|-----------| | Jack | America | | Pascal | Europe | | Xi | Asia | | Jane | America | output | America | Asia | Europe | |---------|------|--------| | Jack | Xi | Pascal | | Jane | | | Solution 2020-09-20 Notes: 很经典的hard SQL，p</description>
    </item>
    
    <item>
      <title>1179 Reformat Department Table</title>
      <link>https://foxisawesome.github.io/posts/1179-reformat-department-table/</link>
      <pubDate>Sun, 20 Sep 2020 18:55:05 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1179-reformat-department-table/</guid>
      <description>LC 1179 Reformat Department Table Write an SQL query to reformat the table such that there is a department id column and a revenue column for each month. Solution 2020-09-20 Notes: 这题和LC 618类似。 SELECT id, SUM(CASE WHEN month = &#39;Jan&#39; THEN revenue ELSE NULL END) AS jan_revenue, SUM(CASE WHEN month = &#39;Feb&#39; THEN revenue ELSE NULL END) AS feb_revenue, SUM(CASE WHEN</description>
    </item>
    
    <item>
      <title>253 Meeting Rooms II</title>
      <link>https://foxisawesome.github.io/posts/253-meeting-rooms-ii/</link>
      <pubDate>Sun, 20 Sep 2020 18:20:53 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/253-meeting-rooms-ii/</guid>
      <description>LC 253 Meeting Rooms II Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si &amp;lt; ei), find the minimum number of conference rooms required. Input: [[0, 30],[5, 10],[15, 20]] Output: 2 Solution 2020-09-20 Notes: 核心是用 存 ending time to a min-heap, 用starting time与heap比较</description>
    </item>
    
    <item>
      <title>46 Permutations</title>
      <link>https://foxisawesome.github.io/posts/46-permutations/</link>
      <pubDate>Sun, 20 Sep 2020 17:33:38 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/46-permutations/</guid>
      <description>LC 46 Permutations Given a collection of distinct integers, return all possible permutations. Input: [1,2,3] Output: [ [1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] Solution 2020-09-20 Notes: Permutation 一般是传入nums[:i]+nums[i+1:] ，而combination的题一般是传入nums</description>
    </item>
    
    <item>
      <title>994 Rotting Oranges</title>
      <link>https://foxisawesome.github.io/posts/994-rotting-oranges/</link>
      <pubDate>Sun, 20 Sep 2020 16:31:00 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/994-rotting-oranges/</guid>
      <description>LC 994 Rotting Oranges In a given grid, each cell can have one of three values: the value 0 representing an empty cell; the value 1 representing a fresh orange; the value 2 representing a rotten orange. Every minute, any fresh orange that is adjacent (4-directionally) to a rotten orange becomes rotten. Return the minimum number of minutes that must elapse until no cell has a fresh orange. If this</description>
    </item>
    
    <item>
      <title>221 Maximal Square</title>
      <link>https://foxisawesome.github.io/posts/221-maximal-square/</link>
      <pubDate>Sun, 20 Sep 2020 15:47:37 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/221-maximal-square/</guid>
      <description>LC 221 Maximal Square   Given a 2D binary matrix filled with 0&amp;rsquo;s and 1&amp;rsquo;s, find the largest square containing only 1&amp;rsquo;s and return its area.
Input: 1 0 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 0 Output: 4   Solution 2020-09-20 Notes:    dp[i][j]: represents the side length of the maximum square whose bottom right corner is the cell with index (i,j) in the original matrix.</description>
    </item>
    
    <item>
      <title>7 Reverse Integer</title>
      <link>https://foxisawesome.github.io/posts/7-reverse-integer/</link>
      <pubDate>Sun, 20 Sep 2020 15:25:11 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/7-reverse-integer/</guid>
      <description>LC 7 Reverse Integer Given a 32-bit signed integer, reverse digits of an integer. Input: -120 Output: -21 Solution 2020-09-20 Notes: 很简单的题，要记得overflow的处理。 class Solution: def reverse(self, x: int) -&amp;gt; int: if x == 0: return x sign = -1 if x &amp;lt; 0 else 1 x = abs(x) ans =</description>
    </item>
    
    <item>
      <title>394 Decode String</title>
      <link>https://foxisawesome.github.io/posts/394-decode-string/</link>
      <pubDate>Sun, 20 Sep 2020 15:09:10 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/394-decode-string/</guid>
      <description>LC 394 Decode String Given an encoded string, return its decoded string. The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer. Input: s = &amp;quot;3[a2[c]]&amp;quot; Output: &amp;quot;accaccacc&amp;quot; Solution 2020-09-20 Notes: 比较简单的一道stack的题。类似于cal</description>
    </item>
    
    <item>
      <title>31 Next Permutation</title>
      <link>https://foxisawesome.github.io/posts/31-next-permutation/</link>
      <pubDate>Sun, 20 Sep 2020 12:16:32 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/31-next-permutation/</guid>
      <description>LC 31 Next Permutation Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers. If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order). The replacement must be in-place and use only constant extra memory. Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column. 1,2,3` →</description>
    </item>
    
    <item>
      <title>983 Minimum Cost for Tickets</title>
      <link>https://foxisawesome.github.io/posts/983-minimum-cost-for-tickets/</link>
      <pubDate>Sat, 19 Sep 2020 22:24:28 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/983-minimum-cost-for-tickets/</guid>
      <description>LC 983 Minimum Cost for Tickets    Solution 2020-09-19 Notes:    # Time O() # Space O()  </description>
    </item>
    
    <item>
      <title>322 Coin Change</title>
      <link>https://foxisawesome.github.io/posts/322-coin-change/</link>
      <pubDate>Sat, 19 Sep 2020 21:28:01 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/322-coin-change/</guid>
      <description>LC 322 Coin Change You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. Input: coins = [1, 2, 5], amount = 11 Output: 3 Explanation: 11 = 5 + 5</description>
    </item>
    
    <item>
      <title>692 Top K Frequent Words</title>
      <link>https://foxisawesome.github.io/posts/692-top-k-frequent-words/</link>
      <pubDate>Sat, 19 Sep 2020 21:00:53 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/692-top-k-frequent-words/</guid>
      <description>LC 692 Top K Frequent Words Given a non-empty list of words, return the k most frequent elements. Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first. Solution 2020-09-19 Notes: 重要的来了，一般，我们认为找出k个最大最小</description>
    </item>
    
    <item>
      <title>973 K Closest Points to Origin</title>
      <link>https://foxisawesome.github.io/posts/973-k-closest-points-to-origin/</link>
      <pubDate>Sat, 19 Sep 2020 20:47:04 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/973-k-closest-points-to-origin/</guid>
      <description>LC 973 K Closest Points to Origin We have a list of points on the plane. Find the K closest points to the origin (0, 0). Input: points = [[1,3],[-2,2]], K = 1 Output: [[-2,2]] Explanation: The distance between (1, 3) and the origin is sqrt(10). The distance between (-2, 2) and the origin is sqrt(8). Since sqrt(8) &amp;lt; sqrt(10), (-2, 2) is closer to the origin. We only want</description>
    </item>
    
  </channel>
</rss>
