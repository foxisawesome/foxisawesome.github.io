<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BFS on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/bfs/</link>
    <description>Recent content in BFS on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 Oct 2020 15:51:48 -0400</lastBuildDate>
    
        <atom:link href="https://foxisawesome.github.io/tags/bfs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>512 Game Play Analysis II</title>
      <link>https://foxisawesome.github.io/posts/512-game-play-analysis-ii/</link>
      <pubDate>Mon, 19 Oct 2020 14:31:42 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/512-game-play-analysis-ii/</guid>
      <description>LC 512 Game Play Analysis II Write a SQL query that reports the device that is first logged in for each player. The query result format is in the following example: Activity table: +-----------+-----------+------------+--------------+ | player_id | device_id | event_date | games_played | +-----------+-----------+------------+--------------+ | 1 | 2 | 2016-03-01 | 5 | | 1 | 2 | 2016-05-02 | 6 | | 2 | 3 | 2017-06-25 | 1</description>
    </item>
    
    <item>
      <title>1290 Convert Binary Number in a Linked List to Integer</title>
      <link>https://foxisawesome.github.io/posts/1290-convert-binary-number-in-a-linked-list-to-integer/</link>
      <pubDate>Mon, 19 Oct 2020 13:55:44 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1290-convert-binary-number-in-a-linked-list-to-integer/</guid>
      <description>LC 1290 Convert Binary Number in a Linked List to Integer Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number. Return the decimal value of the number in the linked list. Input: head = [1,0,1] Output: 5 Explanation: (101) in base 2 = (5)</description>
    </item>
    
    <item>
      <title>1086 High Five</title>
      <link>https://foxisawesome.github.io/posts/1086-high-five/</link>
      <pubDate>Mon, 19 Oct 2020 13:49:24 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1086-high-five/</guid>
      <description>LC 1086 High Five Given a list of scores of different students, return the average score of each student&amp;rsquo;s top five scores in the order of each student&amp;rsquo;s id. Each entry items[i] has items[i][0] the student&amp;rsquo;s id, and items[i][1] the student&amp;rsquo;s score. The average score is calculated using integer division. Solution 2020-10-19 Notes: 秒了 class Solution: def highFive(self, items: List[List[int]]) -&amp;gt; List[List[int]]: d = collections.defaultdict(list) for i in items:</description>
    </item>
    
    <item>
      <title>1252 Cells With Odd Values in a Matrix</title>
      <link>https://foxisawesome.github.io/posts/1252-cells-with-odd-values-in-a-matrix/</link>
      <pubDate>Mon, 19 Oct 2020 13:36:39 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1252-cells-with-odd-values-in-a-matrix/</guid>
      <description>LC 1252 Cells With Odd Values in a Matrix Given n and m which are the dimensions of a matrix initialized by zeros and given an array indices where indices[i] = [ri, ci]. For each pair of [ri, ci] you have to increment all cells in row ri and column ci by 1. Return the number of cells with odd values in the matrix after applying the increment to all</description>
    </item>
    
    <item>
      <title>1021 Remove Outermost Parentheses</title>
      <link>https://foxisawesome.github.io/posts/1021-remove-outermost-parentheses/</link>
      <pubDate>Mon, 19 Oct 2020 13:17:36 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1021-remove-outermost-parentheses/</guid>
      <description>LC 1021 Remove Outermost Parentheses A valid parentheses string is either empty (&amp;quot;&amp;quot;), &amp;quot;(&amp;quot; + A + &amp;quot;)&amp;quot;, or A + B, where A and B are valid parentheses strings, and + represents string concatenation. For example, &amp;quot;&amp;quot;, &amp;quot;()&amp;quot;, &amp;quot;(())()&amp;quot;, and &amp;quot;(()(()))&amp;quot; are all valid parentheses strings. A valid parentheses string S is primitive if it is nonempty, and there does not exist a way to split it into S</description>
    </item>
    
    <item>
      <title>1322 Ads Performance</title>
      <link>https://foxisawesome.github.io/posts/1322-ads-performance/</link>
      <pubDate>Sun, 18 Oct 2020 20:43:41 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1322-ads-performance/</guid>
      <description>LC 1322 Ads Performance Write an SQL query to find the ctr of each Ad. Round ctr to 2 decimal points. Order the result table by ctr in descending order and by ad_id in ascending order in case of a tie. The query result format is in the following example: Ads table: +-------+---------+---------+ | ad_id | user_id | action | +-------+---------+---------+ | 1 | 1 | Clicked | | 2</description>
    </item>
    
    <item>
      <title>1543 Fix Product Name Format</title>
      <link>https://foxisawesome.github.io/posts/1543-fix-product-name-format/</link>
      <pubDate>Sun, 18 Oct 2020 20:34:36 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1543-fix-product-name-format/</guid>
      <description>LC 1543 Fix Product Name Format Write an SQL query to report product_name in lowercase without leading or trailing white spaces. sale_date in the format (&#39;YYYY-MM&#39;) total the number of times the product was sold in this month. Return the result table ordered by product_name in ascending order, in case of a tie order it by sale_date in ascending order. The query result format is in the following example. Sales</description>
    </item>
    
    <item>
      <title>607 Sales Person</title>
      <link>https://foxisawesome.github.io/posts/607-sales-person/</link>
      <pubDate>Sun, 18 Oct 2020 20:33:03 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/607-sales-person/</guid>
      <description>LC 607 Sales Person Given three tables: salesperson, company, orders. Output all the names in the table salesperson, who didn’t have sales to company &amp;lsquo;RED&amp;rsquo;. Solution 2020-10-18 Notes: 秒了 SELECT DISTINCT name FROM salesperson WHERE sales_id NOT IN (SELECT sales_id FROM orders WHERE com_id IN (SELECT com_id FROM company WHERE name=&#39;RED&#39;))</description>
    </item>
    
    <item>
      <title>1294 Weather Type in Each Country</title>
      <link>https://foxisawesome.github.io/posts/1294-weather-type-in-each-country/</link>
      <pubDate>Sun, 18 Oct 2020 20:27:37 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1294-weather-type-in-each-country/</guid>
      <description>LC 1294 Weather Type in Each Country Write an SQL query to find the type of weather in each country for November 2019. The type of weather is Cold if the average weather_state is less than or equal 15, Hot if the average weather_state is greater than or equal 25 and Warm otherwise. Return result table in any order. Solution 2020-10-18 Notes: 秒了 SELECT country_name, (CASE WHEN AVG(weather_state)&amp;lt;=15 THEN</description>
    </item>
    
    <item>
      <title>361 Bomb Enemy</title>
      <link>https://foxisawesome.github.io/posts/361-bomb-enemy/</link>
      <pubDate>Sun, 18 Oct 2020 20:16:29 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/361-bomb-enemy/</guid>
      <description>LC 361 Bomb Enemy   Given a 2D grid, each cell is either a wall &#39;W&#39;, an enemy &#39;E&#39; or empty &#39;0&#39; (the number zero), return the maximum enemies you can kill using one bomb. The bomb kills all the enemies in the same row and column from the planted point until it hits the wall since the wall is too strong to be destroyed. Note: You can only put the bomb at an empty cell.</description>
    </item>
    
    <item>
      <title>723 Candy Crush</title>
      <link>https://foxisawesome.github.io/posts/723-candy-crush/</link>
      <pubDate>Sun, 18 Oct 2020 19:33:47 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/723-candy-crush/</guid>
      <description>LC 723 Candy Crush This question is about implementing a basic elimination algorithm for Candy Crush. Given a 2D integer array board representing the grid of candy, different positive integers board[i][j] represent different types of candies. A value of board[i][j] = 0 represents that the cell at position (i, j) is empty. The given board represents the state of the game following the player&amp;rsquo;s move. Now, you need to restore</description>
    </item>
    
    <item>
      <title>1470 Shuffle the Array</title>
      <link>https://foxisawesome.github.io/posts/1470-shuffle-the-array/</link>
      <pubDate>Sun, 18 Oct 2020 15:22:00 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1470-shuffle-the-array/</guid>
      <description>LC 1470 Shuffle the Array Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn]. Return the array in the form [x1,y1,x2,y2,...,xn,yn]. Solution 2020-10-18 Notes: 不能这么写 [i,j for i, j in zip(nums[:n],nums[n:])] class Solution: def shuffle(self, nums: List[int], n: int) -&amp;gt; List[int]: ans = [] for i, j in zip(nums[:n], nums[n:]): ans += [i] + [j] return ans # Time O(N) # Space O(N)</description>
    </item>
    
    <item>
      <title>1431 Kids With the Greatest Number of Candies</title>
      <link>https://foxisawesome.github.io/posts/1431-kids-with-the-greatest-number-of-candies/</link>
      <pubDate>Sun, 18 Oct 2020 15:12:18 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1431-kids-with-the-greatest-number-of-candies/</guid>
      <description>LC 1431 Kids With the Greatest Number of Candies Given the array candies and the integer extraCandies, where candies[i] represents the number of candies that the *ith* kid has. For each kid check if there is a way to distribute extraCandies among the kids such that he or she can have the greatest number of candies among them. Notice that multiple kids can have the greatest number of candies. Input:</description>
    </item>
    
    <item>
      <title>1480 Running Sum of 1d Array</title>
      <link>https://foxisawesome.github.io/posts/1480-running-sum-of-1d-array/</link>
      <pubDate>Sun, 18 Oct 2020 15:05:05 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1480-running-sum-of-1d-array/</guid>
      <description>LC 1480 Running Sum of 1d Array Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). Return the running sum of nums. Solution 2020-10-18 Notes: Pre-sum. 秒了 class Solution: def runningSum(self, nums: List[int]) -&amp;gt; List[int]: if not nums: return [] n =</description>
    </item>
    
    <item>
      <title>1119 Remove Vowels From a String</title>
      <link>https://foxisawesome.github.io/posts/1119-remove-vowels-from-a-string/</link>
      <pubDate>Sun, 18 Oct 2020 15:01:30 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1119-remove-vowels-from-a-string/</guid>
      <description>LC 1119 Remove Vowels From a String Given a string S, remove the vowels &#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, and &#39;u&#39; from it, and return the new string. Solution 2020-10-18 Notes: 秒了 class Solution: def removeVowels(self, S: str) -&amp;gt; str: v = set([&#39;a&#39;,&#39;e&#39;,&#39;i&#39;,&#39;o&#39;,&#39;u&#39;]) ans = [] for s in S: if s not in v: ans.append(s) return &#39;&#39;.join(ans) # Time O(N) # Space O(N)</description>
    </item>
    
    <item>
      <title>1342 Number of Steps to Reduce a Number to Zero</title>
      <link>https://foxisawesome.github.io/posts/1342-number-of-steps-to-reduce-a-number-to-zero/</link>
      <pubDate>Sun, 18 Oct 2020 14:58:02 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1342-number-of-steps-to-reduce-a-number-to-zero/</guid>
      <description>LC 1342 Number of Steps to Reduce a Number to Zero Given a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it. Input: num = 14 Output: 6 Explanation: Step 1) 14 is even; divide by 2 and obtain 7. Step 2) 7 is odd;</description>
    </item>
    
    <item>
      <title>1141 User Activity for the Past 30 Days I</title>
      <link>https://foxisawesome.github.io/posts/1141-user-activity-for-the-past-30-days-i/</link>
      <pubDate>Sat, 17 Oct 2020 21:13:03 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1141-user-activity-for-the-past-30-days-i/</guid>
      <description>LC 1141 User Activity for the Past 30 Days I Write an SQL query to find the daily active user count for a period of 30 days ending 2019-07-27 inclusively. A user was active on some day if he/she made at least one activity on that day. The query result format is in the following example: Activity table: +---------+------------+---------------+---------------+ | user_id | session_id | activity_date | activity_type | +---------+------------+---------------+---------------+ |</description>
    </item>
    
    <item>
      <title>1623 All Valid Triplets That Can Represent a Country</title>
      <link>https://foxisawesome.github.io/posts/1623-all-valid-triplets-that-can-represent-a-country/</link>
      <pubDate>Sat, 17 Oct 2020 21:10:35 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1623-all-valid-triplets-that-can-represent-a-country/</guid>
      <description>LC 1623 All Valid Triplets That Can Represent a Country   Write an SQL query to find all the possible triplets representing the country under the given constraints.
Return the result table in any order.
The query result format is in the following example.
SchoolA table: +------------+--------------+ | student_id | student_name | +------------+--------------+ | 1 | Alice | | 2 | Bob | +------------+--------------+ SchoolB table: +------------+--------------+ | student_id | student_name | +------------+--------------+ | 3 | Tom | +------------+--------------+ SchoolC table: +------------+--------------+ | student_id | student_name | +------------+--------------+ | 3 | Tom | | 2 | Jerry | | 10 | Alice | +------------+--------------+ Result table: +----------+----------+----------+ | member_A | member_B | member_C | +----------+----------+----------+ | Alice | Tom | Jerry | | Bob | Tom | Alice | +----------+----------+----------+ Let us see all the possible triplets.</description>
    </item>
    
    <item>
      <title>1159 Market Analysis II</title>
      <link>https://foxisawesome.github.io/posts/1159-market-analysis-ii/</link>
      <pubDate>Sat, 17 Oct 2020 20:54:12 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1159-market-analysis-ii/</guid>
      <description>LC 1159 Market Analysis II Write an SQL query to find for each user, whether the brand of the second item (by date) they sold is their favorite brand. If a user sold less than two items, report the answer for that user as no. It is guaranteed that no seller sold more than one item on a day. The query result format is in the following example: Users table:</description>
    </item>
    
    <item>
      <title>1517 Find Users With Valid E-Mails</title>
      <link>https://foxisawesome.github.io/posts/1517-find-users-with-valid-e-mails/</link>
      <pubDate>Sat, 17 Oct 2020 20:29:16 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1517-find-users-with-valid-e-mails/</guid>
      <description>LC 1517 Find Users With Valid E-Mails   Write an SQL query to find the users who have valid emails.
A valid e-mail has a prefix name and a domain where:
 The prefix name is a string that may contain letters (upper or lower case), digits, underscore &#39;_&#39;, period &#39;.&#39; and/or dash &#39;-&#39;. The prefix name must start with a letter. The domain is &#39;@leetcode.com&#39;.  Return the result table in any order.</description>
    </item>
    
  </channel>
</rss>
