<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sort on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/sort/</link>
    <description>Recent content in sort on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Nov 2020 10:30:56 -0500</lastBuildDate>
    
        <atom:link href="https://foxisawesome.github.io/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>69 Sqrtx</title>
      <link>https://foxisawesome.github.io/posts/69-sqrtx/</link>
      <pubDate>Sat, 07 Mar 2020 22:51:59 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/69-sqrtx/</guid>
      <description>LC 69 Sqrtx Implement int sqrt(int x). Sqrt(8) = 2 Solution 2020-03-07 Notes: 标准的binary search 模版， right 从x//2开始。 2020-10-06 Notes： 今天又做了一遍，这题虽然看起来像是寻找left bound</description>
    </item>
    
    <item>
      <title>1 Two Sum</title>
      <link>https://foxisawesome.github.io/posts/1-two-sum/</link>
      <pubDate>Sat, 01 Feb 2020 14:01:30 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1-two-sum/</guid>
      <description>LC 1 Two Sum   Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have *exactly* one solution, and you may not use the same element twice.
 Solution 2020-02-01 Notes:
 use hash table, one-pass.  class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: if not nums or target is None: return [] d = dict() for i, val in enumerate(nums): if target - val not in d: d[val] = i else: return [d[target - val], i] # Time O(N) # Space O(N)  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://foxisawesome.github.io/about/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://foxisawesome.github.io/about/</guid>
      <description>Dr. Q. Weng   Linkedin
  Github
  fox.weng@me.com
  Research and Interests Data Analysis Probability and Statistics • Bayesian Analysis • Machine Learning • Time Series Analysis • Natural Language Processing • Visualization.
Others Knowledge Sharing • Data Science • Clean Code
Hobbies Photography • Sports</description>
    </item>
    
    <item>
      <title>Imbalance Data Handling Notes</title>
      <link>https://foxisawesome.github.io/posts/imbalance_data_handling_notes/</link>
      <pubDate>Mon, 11 Nov 2019 21:43:28 -0500</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/imbalance_data_handling_notes/</guid>
      <description>reference: The 5 Most Useful Techniques to Handle Imbalanced Datasets
1. Random Undersampling and Oversampling A widely adopted and perhaps the most straightforward method for dealing with highly imbalanced datasets is called resampling. It consists of removing samples from the majority class (under-sampling) and/or adding more examples from the minority class (over-sampling).
Let us first create some example imbalanced data.
from sklearn.datasets import make_classification X, y = make_classification( n_classes=2, class_sep=1.5, weights=[0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://foxisawesome.github.io/posts/%E5%89%8D%E7%BC%80%E5%92%8C%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/%E5%89%8D%E7%BC%80%E5%92%8C%E6%8A%80%E5%B7%A7/</guid>
      <description>前缀和技巧 今天来聊一道简单却十分巧妙的算法问题：算出一共有几个和为 k 的子数组。 那我把所有子数组都穷举出来，算它们的和，看看谁的和等于 k 不就行</description>
    </item>
    
  </channel>
</rss>
