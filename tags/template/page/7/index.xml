<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>template on Q. Weng</title>
    <link>https://foxisawesome.github.io/tags/template/</link>
    <description>Recent content in template on Q. Weng</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 06 Sep 2020 18:35:02 -0400</lastBuildDate>
    
        <atom:link href="https://foxisawesome.github.io/tags/template/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1288 Remove Covered Intervals</title>
      <link>https://foxisawesome.github.io/posts/1288-remove-covered-intervals/</link>
      <pubDate>Tue, 29 Sep 2020 20:01:38 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1288-remove-covered-intervals/</guid>
      <description>LC 1288 Remove Covered Intervals Given a list of intervals, remove all intervals that are covered by another interval in the list. Interval [a,b) is covered by interval [c,d) if and only if c &amp;lt;= a and b &amp;lt;= d. After doing so, return the number of remaining intervals. Input: intervals = [[1,4],[3,6],[2,8]] Output: 2 Explanation: Interval [3,6] is covered by [2,8], therefore it is removed. Solution 2020-09-29 Notes: 排</description>
    </item>
    
    <item>
      <title>1113 Reported Posts</title>
      <link>https://foxisawesome.github.io/sql/1113-reported-posts/</link>
      <pubDate>Tue, 29 Sep 2020 19:04:24 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/1113-reported-posts/</guid>
      <description>LC 1113 Reported Posts   Write an SQL query that reports the number of posts reported yesterday for each report reason. Assume today is 2019-07-05.
 Solution 2020-09-29 Notes: SELECT report_reason, report_count FROM ( SELECT extra as report_reason, COUNT(*) as report_count FROM ( SELECT DISTINCT post_id, extra FROM actions WHERE DATEDIFF(&#39;2019-07-05&#39;,action_date)=1 AND action = &#39;report&#39; ) a GROUP BY 1 ) b WHERE report_reason IS NOT NULL ;  </description>
    </item>
    
    <item>
      <title>1045 Customers Who Bought All Products</title>
      <link>https://foxisawesome.github.io/sql/1045-customers-who-bought-all-products/</link>
      <pubDate>Tue, 29 Sep 2020 14:12:22 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/1045-customers-who-bought-all-products/</guid>
      <description>LC 1045 Customers Who Bought All Products   Write an SQL query for a report that provides the customer ids from the Customer table that bought all the products in the Product table.
 Solution 2020-09-29 Notes: SELECT customer_id FROM ( SELECT customer_id, COUNT(DISTINCT product_key) AS ct FROM customer GROUP BY customer_id ORDER BY 1 ) a WHERE ct = (SELECT COUNT(*) from product) ORDER BY 1 ;  </description>
    </item>
    
    <item>
      <title>627 Swap Salary</title>
      <link>https://foxisawesome.github.io/sql/627-swap-salary/</link>
      <pubDate>Tue, 29 Sep 2020 13:54:07 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/627-swap-salary/</guid>
      <description>LC 627 Swap Salary   SQL Schema
Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.
Note that you must write a single update statement, DO NOT write any select statement for this problem.
 Solution 2020-09-29 Notes:  UPDATE statement.</description>
    </item>
    
    <item>
      <title>577 Employee Bonus</title>
      <link>https://foxisawesome.github.io/sql/577-employee-bonus/</link>
      <pubDate>Tue, 29 Sep 2020 13:49:21 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/577-employee-bonus/</guid>
      <description>LC 577 Employee Bonus   Select all employee&amp;rsquo;s name and bonus whose bonus is &amp;lt; 1000.
Table:Employee
+-------+--------+-----------+--------+ | empId | name | supervisor| salary | +-------+--------+-----------+--------+ | 1 | John | 3 | 1000 | | 2 | Dan | 3 | 2000 | | 3 | Brad | null | 4000 | | 4 | Thomas | 3 | 4000 | +-------+--------+-----------+--------+ empId is the primary key column for this table.</description>
    </item>
    
    <item>
      <title>574 Winning Candidate</title>
      <link>https://foxisawesome.github.io/sql/574-winning-candidate/</link>
      <pubDate>Tue, 29 Sep 2020 13:40:03 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/574-winning-candidate/</guid>
      <description>LC 574 Winning Candidate Write a sql to find the name of the winning candidate, the above example will return the winner B. Solution 2020-09-29 Notes: 先 group by, 在 order by 里放 aggregation function SELECT name FROM candidate WHERE id = ( SELECT candidateid FROM vote GROUP BY candidateid ORDER BY COUNT(*) DESC LIMIT 1 ) 2020-10-14 Notes: Window function + aggregation function SELECT name FROM candidate a</description>
    </item>
    
    <item>
      <title>534 Game Play Analysis III</title>
      <link>https://foxisawesome.github.io/sql/534-game-play-analysis-iii/</link>
      <pubDate>Tue, 29 Sep 2020 13:30:11 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/sql/534-game-play-analysis-iii/</guid>
      <description>LC 534 Game Play Analysis III   Write an SQL query that reports for each player and date, how many games played so far by the player. That is, the total number of games played by the player until that date. Check the example for clarity.
The query result format is in the following example:
Activity table: +-----------+-----------+------------+--------------+ | player_id | device_id | event_date | games_played | +-----------+-----------+------------+--------------+ | 1 | 2 | 2016-03-01 | 5 | | 1 | 2 | 2016-05-02 | 6 | | 1 | 3 | 2017-06-25 | 1 | | 3 | 1 | 2016-03-02 | 0 | | 3 | 4 | 2018-07-03 | 5 | +-----------+-----------+------------+--------------+ Result table: +-----------+------------+---------------------+ | player_id | event_date | games_played_so_far | +-----------+------------+---------------------+ | 1 | 2016-03-01 | 5 | | 1 | 2016-05-02 | 11 | | 1 | 2017-06-25 | 12 | | 3 | 2016-03-02 | 0 | | 3 | 2018-07-03 | 5 | +-----------+------------+---------------------+   Solution 2020-09-29 Notes:  SUM() OVER(ORDER BY) gives cumulative results.</description>
    </item>
    
    <item>
      <title>567 Permutation in String</title>
      <link>https://foxisawesome.github.io/posts/567-permutation-in-string/</link>
      <pubDate>Tue, 29 Sep 2020 13:02:26 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/567-permutation-in-string/</guid>
      <description>LC 567 Permutation in String Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string&amp;rsquo;s permutations is the substring of the second string. Input: s1 = &amp;quot;ab&amp;quot; s2 = &amp;quot;eidbaooo&amp;quot; Output: True Explanation: s2 contains one permutation of s1 (&amp;quot;ba&amp;quot;). Solution 2020-09-29 Notes: 这题用了slidin</description>
    </item>
    
    <item>
      <title>930 Binary Subarrays With Sum</title>
      <link>https://foxisawesome.github.io/posts/930-binary-subarrays-with-sum/</link>
      <pubDate>Tue, 29 Sep 2020 11:36:28 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/930-binary-subarrays-with-sum/</guid>
      <description>LC 930 Binary Subarrays With Sum In an array A of 0s and 1s, how many non-empty subarrays have sum S? Input: A = [1,0,1,0,1], S = 2 Output: 4 Explanation: The 4 subarrays are bolded below: [1,0,1,0,1] [1,0,1,0,1] [1,0,1,0,1] [1,0,1,0,1] Solution 2020-09-29 Notes: 第一刷时按topic来刷的，这一些列题都几乎一摸一样</description>
    </item>
    
    <item>
      <title>1004 Max Consecutive Ones III</title>
      <link>https://foxisawesome.github.io/posts/1004-max-consecutive-ones-iii/</link>
      <pubDate>Mon, 28 Sep 2020 22:06:14 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1004-max-consecutive-ones-iii/</guid>
      <description>LC 1004 Max Consecutive Ones III Given an array A of 0s and 1s, we may change up to K values from 0 to 1. Return the length of the longest (contiguous) subarray that contains only 1s. Input: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2 Output: 6 Explanation: [1,1,1,0,0,1,1,1,1,1,1] Bolded numbers were flipped from 0 to 1. The longest subarray is underlined. Solution 2020-09-28 Notes: 这其实是倒挺</description>
    </item>
    
    <item>
      <title>1248 Count Number of Nice Subarrays</title>
      <link>https://foxisawesome.github.io/posts/1248-count-number-of-nice-subarrays/</link>
      <pubDate>Mon, 28 Sep 2020 21:38:49 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1248-count-number-of-nice-subarrays/</guid>
      <description>LC 1248 Count Number of Nice Subarrays Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it. Return the number of nice sub-arrays. Input: nums = [1,1,2,1,1], k = 3 Output: 2 Explanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1]. Solution 2020-09-28 Notes: 这是与LC 992 一摸一</description>
    </item>
    
    <item>
      <title>1358 Number of Substrings Containing All Three Characters</title>
      <link>https://foxisawesome.github.io/posts/1358-number-of-substrings-containing-all-three-characters/</link>
      <pubDate>Mon, 28 Sep 2020 21:14:47 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/1358-number-of-substrings-containing-all-three-characters/</guid>
      <description>LC 1358 Number of Substrings Containing All Three Characters Given a string s consisting only of characters a, b and c. Return the number of substrings containing at least one occurrence of all these characters a, b and c. Input: s = &amp;quot;abcabc&amp;quot; Output: 10 Explanation: The substrings containing at least one occurrence of the characters a, b and c are &amp;quot;abc&amp;quot;, &amp;quot;abca&amp;quot;, &amp;quot;abcab&amp;quot;, &amp;quot;abcabc&amp;quot;, &amp;quot;bca&amp;quot;, &amp;quot;bcab&amp;quot;, &amp;quot;bcabc&amp;quot;, &amp;quot;cab&amp;quot;, &amp;quot;cabc&amp;quot;</description>
    </item>
    
    <item>
      <title>992 Subarrays With K Different Integers</title>
      <link>https://foxisawesome.github.io/posts/992-subarrays-with-k-different-integers/</link>
      <pubDate>Mon, 28 Sep 2020 20:37:09 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/992-subarrays-with-k-different-integers/</guid>
      <description>LC 992 Subarrays With K Different Integers Given an array A of positive integers, call a (contiguous, not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly K. Input: A = [1,2,1,2,3], K = 2 Output: 7 Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]. Solution 2020-09-28 Notes: 看了论坛里的最</description>
    </item>
    
    <item>
      <title>977 Squares of a Sorted Array</title>
      <link>https://foxisawesome.github.io/posts/977-squares-of-a-sorted-array/</link>
      <pubDate>Mon, 28 Sep 2020 18:38:26 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/977-squares-of-a-sorted-array/</guid>
      <description>LC 977 Squares of a Sorted Array Given an array of integers A sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order. Input: [-4,-1,0,3,10] Output: [0,1,9,16,100] Solution 2020-09-28 Notes: 先找到零的位置再向两边走。 class Solution: def sortedSquares(self, A: List[int]) -&amp;gt; List[int]: p, n = 0, len(A) while p &amp;lt; n and A[p]</description>
    </item>
    
    <item>
      <title>16 3sum Closest</title>
      <link>https://foxisawesome.github.io/posts/16-3sum-closest/</link>
      <pubDate>Mon, 28 Sep 2020 16:36:01 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/16-3sum-closest/</guid>
      <description>LC 16 3sum Closest Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution. Solution 2020-09-28 Notes: 这题其实只能穷举，用了sort之后可以pr</description>
    </item>
    
    <item>
      <title>15 3sum</title>
      <link>https://foxisawesome.github.io/posts/15-3sum/</link>
      <pubDate>Mon, 28 Sep 2020 16:16:45 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/15-3sum/</guid>
      <description>LC 15 3sum Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero. Solution 2020-09-28 Notes: 这题最困难的地方时不能有dups。用这个条件很多次了 if</description>
    </item>
    
    <item>
      <title>881 Boats to Save People</title>
      <link>https://foxisawesome.github.io/posts/881-boats-to-save-people/</link>
      <pubDate>Mon, 28 Sep 2020 11:28:10 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/881-boats-to-save-people/</guid>
      <description>LC 881 Boats to Save People The i-th person has weight people[i], and each boat can carry a maximum weight of limit. Each boat carries at most 2 people at the same time, provided the sum of the weight of those people is at most limit. Return the minimum number of boats to carry every given person. (It is guaranteed each person can be carried by a boat.) Input: people</description>
    </item>
    
    <item>
      <title>986 Interval List Intersections</title>
      <link>https://foxisawesome.github.io/posts/986-interval-list-intersections/</link>
      <pubDate>Sun, 27 Sep 2020 19:18:17 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/986-interval-list-intersections/</guid>
      <description>LC 986 Interval List Intersections Given two lists of closed intervals, each list of intervals is pairwise disjoint and in sorted order. Return the intersection of these two interval lists. (Formally, a closed interval [a, b] (with a &amp;lt;= b) denotes the set of real numbers x with a &amp;lt;= x &amp;lt;= b. The intersection of two closed intervals is a set of real numbers that is either empty, or</description>
    </item>
    
    <item>
      <title>925 Long Pressed Name</title>
      <link>https://foxisawesome.github.io/posts/925-long-pressed-name/</link>
      <pubDate>Sun, 27 Sep 2020 16:14:07 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/925-long-pressed-name/</guid>
      <description>LC 925 Long Pressed Name Your friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times. You examine the typed characters of the keyboard. Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed. Solution 2020-09-27 Notes: 这题好</description>
    </item>
    
    <item>
      <title>455 Assign Cookies</title>
      <link>https://foxisawesome.github.io/posts/455-assign-cookies/</link>
      <pubDate>Sun, 27 Sep 2020 15:43:20 -0400</pubDate>
      
      <guid>https://foxisawesome.github.io/posts/455-assign-cookies/</guid>
      <description>LC 455 Assign Cookies Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor gi, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size sj. If sj &amp;gt;= gi, we can assign the cookie j to</description>
    </item>
    
  </channel>
</rss>
